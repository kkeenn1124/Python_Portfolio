# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'D:\Qt Designer\qttest\Phison_Query_combi_EUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QIcon
import openpyxl,sqlite3,os,socket
import subprocess
import pandas as pd


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(544, 534)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.import_btn = QtWidgets.QToolButton(self.centralwidget)
        self.import_btn.setGeometry(QtCore.QRect(40, 160, 221, 71))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        self.import_btn.setFont(font)
        self.import_btn.setObjectName("import_btn")
        self.import_btn.clicked.connect(self.btn_click)
        self.layoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(40, 52, 451, 103))
        self.layoutWidget.setObjectName("layoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.layoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.label = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 1)
        self.WO = QtWidgets.QLineEdit(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        self.WO.setFont(font)
        self.WO.setObjectName("WO")
        self.gridLayout.addWidget(self.WO, 0, 1, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 1, 0, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 2, 0, 1, 1)
        self.Station_2 = QtWidgets.QLineEdit(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        self.Station_2.setFont(font)
        self.Station_2.setObjectName("Station_2")
        self.gridLayout.addWidget(self.Station_2, 2, 1, 1, 1)
        self.sta_comboBox = QtWidgets.QComboBox(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        self.sta_comboBox.setFont(font)
        self.sta_comboBox.setObjectName("sta_comboBox")
        self.sta_comboBox.addItem("")
        self.sta_comboBox.setItemText(0, "")
        self.sta_comboBox.addItem("")
        self.sta_comboBox.addItem("")
        self.sta_comboBox.addItem("")
        self.sta_comboBox.addItem("")
        self.sta_comboBox.addItem("")
        self.sta_comboBox.addItem("")
        self.sta_comboBox.addItem("")
        self.gridLayout.addWidget(self.sta_comboBox, 1, 1, 1, 1)
        self.layoutWidget1 = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget1.setGeometry(QtCore.QRect(40, 240, 451, 175))
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.layoutWidget1)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.all_2 = QtWidgets.QLabel(self.layoutWidget1)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(20)
        self.all_2.setFont(font)
        self.all_2.setObjectName("all_2")
        self.gridLayout_2.addWidget(self.all_2, 0, 0, 1, 1)
        self.all = QtWidgets.QLabel(self.layoutWidget1)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(20)
        self.all.setFont(font)
        self.all.setObjectName("all")
        self.gridLayout_2.addWidget(self.all, 1, 0, 1, 1)
        self.ppass = QtWidgets.QLabel(self.layoutWidget1)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(20)
        self.ppass.setFont(font)
        self.ppass.setObjectName("ppass")
        self.gridLayout_2.addWidget(self.ppass, 2, 0, 1, 1)
        self.fail = QtWidgets.QLabel(self.layoutWidget1)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(20)
        self.fail.setFont(font)
        self.fail.setObjectName("fail")
        self.gridLayout_2.addWidget(self.fail, 3, 0, 1, 1)
        self.checkBox = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox.setGeometry(QtCore.QRect(380, 170, 108, 19))
        self.checkBox.setObjectName("checkBox")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 544, 25))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        mainWindow.setWindowIcon(QIcon('D:\Qt Designer\qttest\\10.ico'))
        MainWindow.setWindowTitle(_translate("MainWindow", "Phison_PKG"))
        self.import_btn.setText(_translate("MainWindow", "匯出"))
        self.label.setText(_translate("MainWindow", "工單(WO):"))
        self.label_2.setText(_translate("MainWindow", "站別(Station):"))
        self.label_3.setText(_translate("MainWindow", "PSID:"))
        self.sta_comboBox.setItemText(1, _translate("MainWindow", "PreF1"))
        self.sta_comboBox.setItemText(2, _translate("MainWindow", "CSB"))
        self.sta_comboBox.setItemText(3, _translate("MainWindow", "F1"))
        self.sta_comboBox.setItemText(4, _translate("MainWindow", "F2"))
        self.sta_comboBox.setItemText(5, _translate("MainWindow", "F3"))
        self.sta_comboBox.setItemText(6, _translate("MainWindow", "AFT"))
        self.sta_comboBox.setItemText(7, _translate("MainWindow", "FX"))
        self.all_2.setText(_translate("MainWindow", "WO:"))
        self.all.setText(_translate("MainWindow", "All:"))
        self.ppass.setText(_translate("MainWindow", "Pass:"))
        self.fail.setText(_translate("MainWindow", "Fail:"))
        self.checkBox.setText(_translate("MainWindow", "EUI64 Enable"))

    def btn_click(self):
            wonum=self.WO.text()
            sta=self.sta_comboBox.currentText()
            if(sta=='AFT'):
                station='F1/QC/F3'
            elif(sta=='F2'):
                station='QC'
            else:
                station=self.sta_comboBox.currentText()
            psid=self.Station_2.text()

            ip=str(socket_ip())
            if(ip[:3]=='172'):
                serverip='172.16.22.177'
                woip='172.16.22.176'
            else:
                serverip='192.168.11.250'
                woip='192.168.11.252'

            wofile=f'\\\\{woip}\\data\\OQA\\6. @@@Phison_log比對@@@\\{wonum}_{sta}出貨log.xlsx'
            serverdb=f'\\\\{serverip}\Tomcat\\apache-tomcat-9.0.31\webapps\phison\{wonum}.db'

            if(os.path.isfile(serverdb)):
                if (os.path.isfile(wofile)):
                    os.remove(wofile)
                wb=openpyxl.Workbook()
                ws=wb.get_sheet_by_name('Sheet')

                db=sqlite3.connect(serverdb)
                dbcon=db.cursor()

                if(self.checkBox.isChecked()):
                    sql2=f"""SELECT * from 
                    (SELECT wo,SCAN_SN,SCAN_PSID,WWN_EUI64,QR_CODE,TEST_RESULT,TIME_STAMP,row_number() OVER (PARTITION by WWN_EUI64 ORDER by TIME_STAMP DESC) a from SN_TOOL_RECORD WHERE STATION='{station.upper()}') r
                    where a=1 and TEST_RESULT =2
                    order by SCAN_SN"""
                else:
                    sql2=f"""SELECT * from 
                    (SELECT wo,SCAN_SN,SCAN_PSID,WWN_EUI64,QR_CODE,TEST_RESULT,TIME_STAMP,row_number() OVER (PARTITION by QR_CODE ORDER by TIME_STAMP DESC) a from SN_TOOL_RECORD WHERE STATION='{station.upper()}') r
                    where a=1 and TEST_RESULT =2
                    order by SCAN_SN"""
                    
                dbcon.execute(sql2)
                values=dbcon.fetchall()

                ws.cell(1,1).value='Outer Carton ID'        
                ws.cell(1,2).value='Inter Carton ID'
                ws.cell(1,3).value='SN'
                ws.cell(1,4).value='PN'
                ws.cell(1,5).value='WO'
                ws.cell(1,6).value='WO SN'
                ws.cell(1,7).value='PSID'
                ws.cell(1,8).value='Test_Result'
                ws.cell(1,9).value='Time'
                pscount=0
                facount=0

                ii=1
                for i in values:
                    ii+=1
                    if(i[5]==1):
                        facount+=1

                    ws.cell(ii,3).value=i[1]+psid.upper()
                    ws.cell(ii,5).value=i[0]

                    if(self.checkBox.isChecked()):
                        ws.cell(ii,6).value=i[1]
                    else:
                        ws.cell(ii,6).value=i[4]
                    ws.cell(ii,7).value=i[2]
                    ws.cell(ii,8).value=i[5]
                    ws.cell(ii,9).value=i[6]

                wb.save(wofile)

                
                self.all_2.setText('WO:'+str(wonum+'-'+sta))
                self.all.setText('All:  '+str(len(values)))
                self.ppass.setText('Pass:  '+str(int(len(values))-facount))
                self.fail.setText('Fail:  '+str(facount))
                self.checkBox.setChecked(False)
                self.WO.clear()
                self.sta_comboBox.setCurrentIndex(0)
                self.Station_2.clear()

                df=pd.read_excel(wofile)
                dduu=df[df.duplicated(subset='SN',keep=False)]['SN'].unique()
                if(dduu.size>0):
                    messagebox(dduu)

                wb.close()
                db.close()
                subprocess.Popen(f'explorer "\\\\{woip}\\data\\OQA\\6. @@@Phison_log比對@@@\\"')

            else:
                mbox.warning(mainWindow,'警告','查無此工單 請重新輸入')
                self.WO.clear()
                self.sta_comboBox.setCurrentIndex(0)
                self.Station_2.clear()



def socket_ip():
    s=socket.socket(socket.AF_INET,socket.SOCK_DGRAM)
    s.connect(("8.8.8.8",80))
    ip=s.getsockname()[0]
    s.close()
    return ip

def messagebox(Small_PKG):
    
    mm=QtWidgets.QMessageBox(Form)
    Form.resize(500,500)
    mm.warning(Form,'警告',f'有重複SN\n{Small_PKG}\n請確認清楚才可出貨')

if __name__ == '__main__':
    import sys
    app=QtWidgets.QApplication(sys.argv)
    ui=Ui_MainWindow()
    mainWindow=QtWidgets.QMainWindow()
    mbox=QtWidgets.QMessageBox(mainWindow)
    ui.setupUi(mainWindow)
    Form=QtWidgets.QWidget()
    Form.setWindowTitle('zz')
    mainWindow.show()
    sys.exit(app.exec())